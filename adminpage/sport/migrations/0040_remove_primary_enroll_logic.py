# Generated by Django 3.0.7 on 2020-12-31 10:53

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ('sport', '0039_auto_20200830_1221')
    ]

    operations = [
        migrations.RunSQL(
            """
        CREATE OR REPLACE FUNCTION check_group_capacity() RETURNS trigger AS
        $$
        BEGIN
            IF (SELECT count(*) FROM enroll WHERE group_id = new.group_id) >
               (SELECT capacity FROM "group" WHERE id = new.group_id) THEN
                RAISE EXCEPTION 'exceed group capacity';
            END IF;
            IF (SELECT count(*)
                FROM enroll e,
                     "group" g1
                WHERE e.student_id = new.student_id
                  AND e.group_id = g1.id
                  AND g1.semester_id = (
                    SELECT semester_id
                    FROM "group" g2
                    WHERE g2.id = new.group_id
                )) > 5 THEN
                RAISE EXCEPTION 'too much groups';
            END IF;
            RETURN NULL;
        END ;
        $$ LANGUAGE plpgsql;
            """,
            # Old implementation
            reverse_sql="""
        CREATE OR REPLACE FUNCTION check_group_capacity() RETURNS trigger AS
        $$
        BEGIN
            IF (SELECT count(*) FROM enroll WHERE group_id = new.group_id) >
               (SELECT capacity FROM "group" WHERE id = new.group_id) THEN
                RAISE EXCEPTION 'exceed group capacity';
            END IF;
            IF (SELECT count(*)
                FROM enroll e,
                     "group" g1
                WHERE e.student_id = new.student_id
                  AND e.group_id = g1.id
                  AND e.is_primary = new.is_primary
                  AND g1.semester_id = (
                    SELECT semester_id
                    FROM "group" g2
                    WHERE g2.id = new.group_id
                )) > (CASE WHEN new.is_primary THEN 1 ELSE 2 END) THEN
                RAISE EXCEPTION 'too much groups';
            END IF;
            RETURN NULL;
        END ;
        $$ LANGUAGE plpgsql;
            """
        )
    ]
