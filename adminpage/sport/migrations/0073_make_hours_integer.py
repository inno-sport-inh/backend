# Generated by Django 3.1.8 on 2021-08-08 12:59
import datetime
import math

from django.db import migrations, models
from django.db.models import F, Sum, FloatField

import sport.models.attendance


current_hours = []

def attendance_query(apps, schema_editor):
    Attendance = apps.get_model("sport", "Attendance")
    return (
        Attendance.objects.only('training__group__semester_id',
                                'training__group__semester__hours',
                                'student_id',
                                'semester')
        .annotate(semester=F("training__group__semester_id"),
                  semester_hours=F("training__group__semester__hours"))
        .values('student_id', 'semester').order_by('student_id', 'semester')
        .annotate(sum_hours=Sum("hours", output_field=FloatField()))
    )

def calc_before(apps, schema_editor):
    global current_hours
    current_hours = list(attendance_query(apps, schema_editor))


def calc_after(apps, schema_editor):
    global current_hours
    Group = apps.get_model("sport", "Group")
    Training = apps.get_model("sport", "Training")
    Semester = apps.get_model("sport", "Semester")
    Attendance = apps.get_model("sport", "Attendance")

    new_hours = list(attendance_query(apps, schema_editor))
    for i in range(len(new_hours)):
        diff = math.ceil(current_hours[i]['sum_hours'] - new_hours[i]['sum_hours'])
        if diff > 0:
            group, created = Group.objects.get_or_create(semester_id=current_hours[i]['semester'], name="Integer hours ceil")
            training, created = Training.objects.get_or_create(
                group_id=group.pk,
                start=datetime.datetime.combine(Semester.objects.get(id=current_hours[i]['semester']).end, datetime.datetime.min.time()),
                end=datetime.datetime.combine(Semester.objects.get(id=current_hours[i]['semester']).end, datetime.datetime.max.time()),
            )
            attendance = Attendance.objects.create(
                training_id=training.pk,
                student_id=current_hours[i]['student_id'],
                hours=diff,
            )


class Migration(migrations.Migration):

    dependencies = [
        ('sport', '0072_auto_20210808_1618'),
    ]

    operations = [
        migrations.RunPython(calc_before, reverse_code=migrations.RunPython.noop),
        migrations.AlterField(
            model_name='attendance',
            name='hours',
            field=models.IntegerField(default=1, validators=[sport.models.attendance.validate_hours]),
        ),

        migrations.AlterField(
            model_name='reference',
            name='hours',
            field=models.IntegerField(default=0),
        ),

        migrations.AlterField(
            model_name='selfsportreport',
            name='hours',
            field=models.IntegerField(default=0),
        ),
        migrations.RunPython(calc_after, reverse_code=migrations.RunPython.noop),
    ]
